datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  UserData      UserData[] @relation
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserData {
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @id @default(cuid())
  workspaces Workspace[] @relation
}

model Workspace {
  id       String    @id @default(cuid())
  name     String
  userId   String
  UserData UserData? @relation(fields: [id], references: [userId])
  boards   Board[]   @relation
}

model Board {
  id        String    @id @default(cuid())
  name      String?
  workspace Workspace @relation(fields: [id], references: [id])
  lists     List[]    @relation
}

model List {
  id        String     @id @default(cuid())
  name      String?
  Board     Board      @relation(fields: [id], references: [id])
  bookmarks Bookmark[] @relation
}

model Bookmark {
  id          String  @id @default(cuid())
  name        String?
  url         String
  favicon     String?
  title       String?
  description String?
  list        List    @relation(fields: [id], references: [id])
}
